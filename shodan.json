{
    "appid": "3851ef45-3d66-4980-9d2f-c29e04594fa0",
    "name": "Shodan",
    "description": "Provides methods within Phantom to search Shodan , look up hosts, get summary information on queries and a variety of utility methods to make developing easier.",
    "type": "information",
    "product_vendor": "Shodan",
    "logo": "shodan.png",
    "logo_dark": "shodan_dark.png",
    "product_name": "Shodan Rest Api",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "David Burns",
    "license": "Copyright (c) David Burns, 2022",
    "app_version": "1.0.0",
    "utctime_updated": "2022-12-24T18:55:48.131862Z",
    "package_name": "phantom_shodan",
    "main_module": "shodan_connector.py",
    "min_phantom_version": "5.2.1.78411",
    "app_wizard_version": "1.0.0",
    "configuration": {},
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "list queries",
            "identifier": "list_queries",
            "description": "List the saved search queries",
            "verbose": "Use this method to obtain a list of search queries that users have saved in Shodan.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "page":{
                    "description": "Page number to iterate over results; each page contains 10 items. Enter 0 for entire list",
                    "data_type": "numeric",
                    "required": false,
                    "default": 1
                },
                "sort": {
                    "description": "the hash of the file to be queried",
                    "data_type": "string",
                    "value_list": ["timestamp", "votes"],
                    "required": false,
                    "allow_list": true              
                },
                "order": {
                    "description": "the hash of the file to be queried",
                    "data_type": "string",
                    "contains": ["hash", "sha256", "sha1", "md5"],
                    "required": false,
                    "allow_list": true
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.votes",
                    "data_type": "numeric",
                    "example_values": [ 1, 3 ]
    
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": ["Danieverton", "This is Moxa Nport Devices ICS system with Authentication disabled Author: A1C3VENOM"]
    
                },
                {
                    "data_path": "action_result.data.*.timestamp",
                    "data_type": "string",
                    "contains" : ["timestamp"],
                    "example_values": [ "2021-01-26T19:41:50.961000", "2021-01-24T07:44:08.889000"]
    
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string",
                    "example_values":  [ "ip camera" ]
    
                },
                {
                    "data_path": "action_result.data.*.query",
                    "data_type": "string",
                    "example_values": ["ip camera BR"]
    
                },
                {
                    "data_path": "action_result.data.*.tags.*",
                    "data_type": "string",
                    "example_values": ["ics", "iot", "moxa"]
                },
                {
                    "data_path": "summary.total_matches",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }

            ],
            "versions": "EQ(*)"
        },
        {
            "action": "search queries",
            "identifier": "search_queries",
            "description": "Search the directory of saved search queries.",
            "verbose": "Use this method to search the directory of search queries that users have saved in Shodan.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "query": {
                    "description": "What to search for in the directory of saved search queries",
                    "data_type": "string",
                    "required": true
                },
                "page":{
                    "description": "Page number to iterate over results; each page contains 10 items. Enter 0 for entire list",
                    "data_type": "numeric",
                    "required": false,
                    "default": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.votes",
                    "data_type": "numeric",
                    "example_values": [ 1, 3 ]
    
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": ["Danieverton", "This is Moxa Nport Devices ICS system with Authentication disabled Author: A1C3VENOM"]
    
                },
                {
                    "data_path": "action_result.data.*.timestamp",
                    "data_type": "string",
                    "contains" : ["timestamp"],
                    "example_values": [ "2021-01-26T19:41:50.961000", "2021-01-24T07:44:08.889000"]
    
                },
                {
                    "data_path": "action_result.data.*.title",
                    "data_type": "string",
                    "example_values":  [ "webcam", "Webcam" ]
    
                },
                {
                    "data_path": "action_result.data.*.query",
                    "data_type": "string",
                    "example_values": ["ip camera BR"]
    
                },
                {
                    "data_path": "action_result.data.*.tags.*",
                    "data_type": "string",
                    "example_values": ["ics", "iot", "moxa"]
                },
                {
                    "data_path": "summary.total_matches",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }

            ],
            "versions": "EQ(*)"
        },
        {
            "action": "search popular tags",
            "identifier": "search_tags",
            "description": "List the most popular tags.",
            "verbose": "Use this method to obtain a list of popular tags for the saved search queries in Shodan.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "size":{
                    "description": "The number of tags to return (default: 10).",
                    "data_type": "numeric",
                    "required": false,
                    "default": 10
                }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.count",
                    "data_type": "numeric",
                    "example_values": [ 1, 3 ]
                },
                {
                    "data_path": "action_result.data.*.value",
                    "data_type": "string",
                    "example_values": ["webcam", "cam"]
    
                },
                {
                    "data_path": "summary.total_matches",
                    "data_type": "numeric",
                    "example_values": [100]
                }

            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get all user notications",
            "identifier": "get_all_user_notications",
            "description": "Get a list of all the notifiers that the user has created.",
            "type": "investigate",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": [ null, "Email notifier"]
                },
                {
                    "data_path": "action_result.data.*.provider",
                    "data_type": "string",
                    "example_values": ["email"]
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "example_values": ["default"]
                },
                {
                    "data_path": "action_result.data.*.args.*.key",
                    "data_type": "string",
                    "example_values": ["to"]
                },
                {
                    "data_path": "action_result.data.*.args.*.value",
                    "data_type": "string",
                    "example_values": ["jmath@shodan.io"]
                },
                {
                    "data_path": "summary.total_matches",
                    "data_type": "numeric",
                    "example_values": [100]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get_all_notifiaction_providers",
            "identifier": "get_all_notifiaction_providers",
            "description": "List of available notification providers",
            "verbose": "Get a list of all the notification providers that are available and the parameters to submit when creating them.",
            "type": "investigate",
            "read_only": true,
            "output": [
                {
                    "data_path": "action_result.data.*.provider",
                    "data_type": "string",
                    "example_values": ["email"]
                },
                {
                    "data_path": "action_result.data.*.required.*.value",
                    "data_type": "string",
                    "example_values": ["token"]
                },
                {
                    "data_path": "summary.total",
                    "data_type": "numeric",
                    "example_values": [100]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "create_notification",
            "identifier": "create_notification",
            "description": "Create a new notification service for the user",
            "verbose": "Use this method to create a new notification service endpoint that Shodan services can send notifications through.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "provider": {
                    "description": "Provider name to be returned when queried by id",
                    "data_type": "string",
                    "required": true
                },
                "description":{
                    "description": "Description of the notifier",
                    "data_type": "string",
                    "required": true
                },
                "args":{
                    "description": "Arguments required by the provider. String of Key=Value separated by commas",
                    "data_type": "string",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "summary.success",
                    "data_type": "bool",
                    "example_values": [true]
                },
                {
                    "data_path": "summary.id",
                    "data_type": "string",
                    "example_values": ["1VxiaJb93Gn8TUnM"]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete_notification",
            "identifier": "delete_notification",
            "description": "Delete a notification service",
            "verbose": "Remove the notification service created for the user.            ",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Notifier ID",
                    "data_type": "string",
                    "required": true
                }
            },
            "output": [
                {
                    "data_path": "summary.success",
                    "data_type": "bool",
                    "example_values": [true]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "retrieve_notification",
            "identifier": "retrieve_notification",
            "description": "Get information about a notifier",
            "verbose": "Use this method to read a new notification service endpoint that Shodan services can send notifications through.",
            "type": "generic",
            "read_only": true,
            "parameters": {
                "id": {
                        "description": "Notifier ID",
                        "data_type": "string",
                        "required": true
                    }
            },
            "output": [
                {
                    "data_path": "action_result.data.*.provider",
                    "data_type": "string",
                    "example_values": ["email"]
                },
                {
                    "data_path": "action_result.data.*.description",
                    "data_type": "string",
                    "example_values": ["Email notifier"]
                },
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "example_values": ["1VxiaJb93Gn8TUnM"]
                },
                {
                    "data_path": "action_result.data.*.args.*.key",
                    "data_type": "string",
                    "example_values": ["token"]
                },
                {
                    "data_path": "action_result.data.*.args.*.value",
                    "data_type": "string",
                    "example_values": ["token"]
                },
                {
                    "data_path": "summary.total",
                    "data_type": "numeric",
                    "example_values": [100]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "edit_notification",
            "identifier": "edit_notification",
            "description": "Edit a notifier",
            "verbose": "Use this method to update the parameters of a notifier.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "id": {
                        "description": "Notifier ID",
                        "data_type": "string",
                        "required": true
                    },
                    "args":{
                        "description": "Arguments required by the provider. String of Key=Value separated by commas",
                        "data_type": "string",
                        "required": true
                    }
    
            },
            "output": [
                {
                    "data_path": "summary.success",
                    "data_type": "bool",
                    "example_values": [true]
                },
                {
                    "data_path": "summary.id",
                    "data_type": "string",
                    "example_values": ["1VxiaJb93Gn8TUnM"]
                }
            ],
            "versions": "EQ(*)"
        }        
    ]
}